#!/bin/bash

# 变量初始化
projectName=${PRJECT_NAME-""}
workDir="$HOME/satea/$projectName"
dataDir="$HOME/satea/$projectName/data"
privateKey={{PRIVATEKEY-""}}
ALL_SATEA_VARS=("projectName","privateKey")

mkdir -p $dataDir
cd $workDir

# 定义要检查的包列表
packages=(
    jq
    curl
    wget
)

function checkVars() {
    # 循环遍历数组
    for var_name in "${ALL_SATEA_VARS[@]}"; do
        # 动态读取变量的值
        value=$(eval echo \$$var_name)
        if [ -z "$value" ]; then
            # 如果为空，输出错误提示
            echo "Error: Variable $var_name is not set!"
            exit 1
        else
            # 如果不为空，输出变量名及其值
            echo "Variable $var_name value is $value"
        fi
    done
}

#手动模式下 解析并填入变量的函数
function readVariables() {
    >.env.sh
    chmod +x .env.sh
    for var_name in "${ALL_SATEA_VARS[@]}"; do
        read -p "Please input $var_name: " read_value
        echo "$var_name=$read_value" >>.env.sh
    done
}

# 检查并安装每个包
function checkPackages() {
    echo "check packages ..."
    for pkg in "${packages[@]}"; do
        if dpkg-query -W "$pkg" >/dev/null 2>&1; then
            echo "$pkg installed,skip"
        else
            echo "install  $pkg..."
            sudo apt update
            sudo apt install -y "$pkg"
        fi
    done
}

function install() {
apt-get update -y
git clone -b v0.3.3 https://github.com/0glabs/0g-storage-node.git
cd 0g-storage-node
git submodule update --init
cargo build --release
cd 0g-storage-node/run
sed -i "s/miner_key = \"\"/miner_key = \"$privateKey\"/" config.toml
sed -i 's#log_sync_start_block_number = 512567#log_sync_start_block_number = 802#g' config.toml
sed -i 's#blockchain_rpc_endpoint = "https://rpc-testnet.0g.ai"#blockchain_rpc_endpoint = "https://storage.0gnode.xyz/"#g' config.toml
sed -i 's#log_contract_address = "0xb8F03061969da6Ad38f0a4a9f8a86bE71dA3c8E7"#log_contract_address = "0x8873cc79c5b3b5666535C825205C9a128B1D75F1"#g' config.toml
sed -i 's#mine_contract_address = "0x96D90AAcb2D5Ab5C69c1c351B0a0F105aae490bE"#mine_contract_address = "0x85F6722319538A805ED5733c5F4882d96F1C7384"#g' config.toml
ln -s $workDir/0g-storage-node/target/release/zgs_node /usr/bin/zgs_node
tee /etc/systemd/system/0gstorage.service > /dev/null << EOF
[Unit]
Description=0gstorage node service
After=network-online.target
[Service]
User=$USER
WorkingDirectory=$workDir/0g-storage-node/0g-storage-node/run
ExecStart=zgs_node --config config.toml
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reload
systemctl enable 0gstorage.service
systemctl restart 0gstorage.service
}

function start() {
    echo "start ..."
    checkVars
    systemctl start 0gstorage.service
}

function stop() {
    echo "stop ..."
    systemctl stop 0gstorage.service
}


function clean() {
    echo "clean ...."
    systemctl stop 0gstorage.service
    systemctl disable 0gstorage.service
    rm -rf $workDir
}
function logs(){
    cd $workDir/0g-storage-node/run/log
    file=`ls -lt --time=creation | awk 'NR==2 {print $9}'`
    tail -f $file

}

function About() {
    echo '   _____    ___     ______   ______   ___
  / ___/   /   |   /_  __/  / ____/  /   |
  \__ \   / /| |    / /    / __/    / /| |
 ___/ /  / ___ |   / /    / /___   / ___ |
/____/  /_/  |_|  /_/    /_____/  /_/  |_|'

    echo
    echo -e "\xF0\x9F\x9A\x80 Satea Node Installer
Website: https://www.satea.io/
Twitter: https://x.com/SateaLabs
Discord: https://discord.com/invite/satea
Gitbook: https://satea.gitbook.io/satea
Version: V1.0.0
Introduction: Satea is a DePINFI aggregator dedicated to breaking down the traditional barriers that limits access to computing resources.  "
    echo""
}

case $1 in
check-packages)
    checkPackages
    ;;
install)
    if [ "$2" = "--auto" ]; then
        #这里使用自动模式下的 安装 函数
        install
    else
        #手动模式 使用Manual 获取用户输入的变量
        readVariables #获取用户输入的变量
        . .env.sh     #导入变量
        #其他安装函数
        install
    fi
    ;;
start)
    start
    ;;
stop)
    stop
    ;;
logs)
    logs
    ;;
clean)
    clean
    ;;
**)

    #定义帮助信息 例子
    About
    echo "Flag:
  check-packages       Check basic installation package
  install              Install $projectName environment
  start                Start the $projectName service
  stop                 Stop the $projectName service
  clean                Remove the $projectName from your service, remove data!!! 
  logs                 Show the logs of the $projectName service"
    ;;
esac
