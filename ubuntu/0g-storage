Version="1.0.1"

# 定义要检查的包列表
packages=(
clang \
cmake \
build-essential \
git \
screen \
cargo
)

# 检查并安装每个包
function init() {
    for pkg in "${packages[@]}"; do
    if dpkg-query -W "$pkg" >/dev/null 2>&1; then
        echo "$pkg installed,skip"
    else
        echo "install  $pkg..."
        sudo apt update
        sudo apt install -y "$pkg"
    fi
done
}


ALL_SATEA_VARS="privateKey"


privateKey={{SATEA_VARS_privateKey}}



function VadVars(){
     echo "$ALL_SATEA_VARS"
}


function Manual() {
   >.env.sh
   chmod +x .env.sh
   for i in `echo $ALL_SATEA_VARS | tr ',' '\n' `;do

   i_split=`echo $i |tr -d "{" | tr -d "}"`

   read  -p "$i_split ="  i_split_vars

   echo "$i_split=$i_split_vars" >>.env.sh

  done
}



function install(){
echo "install steps"
sudo apt-get update -y
cd
rm -rf 0g-storage-node
git clone -b v0.3.3 https://github.com/0glabs/0g-storage-node.git

#进入对应目录构建
cd 0g-storage-node
git submodule update --init

# 构建代码
cargo build --release

#后台运行
cd ~/0g-storage-node/run

sed -i "s/miner_key = \"\"/miner_key = \"$privateKey\"/" config.toml
sed -i 's#log_sync_start_block_number = 512567#log_sync_start_block_number = 802#g' config.toml
sed -i 's#blockchain_rpc_endpoint = "https://rpc-testnet.0g.ai"#blockchain_rpc_endpoint = "https://storage.0gnode.xyz/"#g' config.toml
sed -i 's#log_contract_address = "0xb8F03061969da6Ad38f0a4a9f8a86bE71dA3c8E7"#log_contract_address = "0x8873cc79c5b3b5666535C825205C9a128B1D75F1"#g' config.toml
sed -i 's#mine_contract_address = "0x96D90AAcb2D5Ab5C69c1c351B0a0F105aae490bE"#mine_contract_address = "0x85F6722319538A805ED5733c5F4882d96F1C7384"#g' config.toml

ln -s /root/0g-storage-node/target/release/zgs_node /usr/bin/zgs_node

sudo tee /etc/systemd/system/0gstorage.service > /dev/null << EOF
[Unit]
Description=0gstorage node service
After=network-online.target
[Service]
User=$USER
WorkingDirectory=/root/0g-storage-node/run
ExecStart=zgs_node --config config.toml
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF
sudo systemctl daemon-reload
sudo systemctl enable 0gstorage.service
# Start the service and check the logs
sudo systemctl restart 0gstorage.service
}




function About() {
echo '   _____    ___       ______   ______   ___
  / ___/   /   |     /_  __/  / ____/  /   |
  \__ \   / /| |      / /    / __/    / /| |
 ___/ /  / ___ |     / /    / /___   / ___ |
/____/  /_/  |_|    /_/    /_____/  /_/  |_|'

echo
echo -e "\xF0\x9F\x9A\x80 Satea Node Installer
Website: https://www.satea.io/
Twitter: https://x.com/SateaLabs
Discord: https://discord.com/invite/satea
Gitbook: https://satea.gitbook.io/satea
Version: $Version
Introduction: Satea is a DePINFI aggregator dedicated to breaking down the traditional barriers that limits access to computing resources.  "
echo""
}





case $1 in

install)

  if [ "$2" = "--auto" ]
  then
     echo "-> Automatic mode, please ensure that ALL SATEA_VARS(`VadVars`) have been replaced !"
          sleep 3

     #这里使用自动模式下的 安装 函数
     install

    else
      echo "Unrecognized variable(`VadVars`) being replaced, manual mode"

      #手动模式 使用Manual 获取用户输入的变量

      Manual      #获取用户输入的变量
      . .env.sh   #导入变量

      #其他安装函数
      install


    fi
  ;;


vars)
 #展示变量
VadVars

  ;;

stop)
sudo systemctl stop 0gstorage.service

  ;;

init)
init
 ;;

clean)
systemctl stop 0gstorage.service
systemctl disable 0gstorage.service
rm -rf $HOME/0g-storage-node
;;
**)

 #定义帮助信息 例子
 About
  echo "Flag:
  install              Install 0g with manual mode,  If carrying the --auto parameter, start Automatic mode
  init                 Install Dependent packages
  stop                 Stop all 0g
  clean                Remove the 0g from your server"
  ;;
esac
