Version="1.0.1"

# 定义要检查的包列表
packages=(
    ca-certificates \
    curl \
    gnupg \
    expect \
    screen \
    jq \
    wget \
    unzip \
    zip \
    git \
    net-tools
)

# 检查并安装每个包
function init() {
    for pkg in "${packages[@]}"; do
    if dpkg-query -W "$pkg" >/dev/null 2>&1; then
        echo "$pkg installed,skip"
    else
        echo "install  $pkg..."
        sudo apt update
        sudo apt install -y "$pkg"
    fi
done
    if command -v go >/dev/null 2>&1; then
    echo "go 已安装，跳过安装步骤。"
else
    echo "下载并安装 Go..."
    wget -c https://golang.org/dl/go1.22.4.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local
    echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc

fi
}

ALL_SATEA_VARS="name,rpckey"
name={{SATEA_VARS_name}}
rpckey={{SATEA_VARS_rpckey}}
if command -v pm2 &> /dev/null
then
    echo "pm2 已安装，跳过安装步骤"
else
    echo "pm2 未安装，开始安装"
    apt update
    apt install npm -y
    npm install -g n
    n latest
    hash -r

    npm install pm2@latest -g
fi



##显示需要接收的变量
function VadVars(){
     echo "$ALL_SATEA_VARS"
}

#手动模式下 解析并填入变量的函数
function Manual() {
   >.env.sh
   chmod +x .env.sh
   for i in `echo $ALL_SATEA_VARS | tr ',' '\n' `;do

   i_split=`echo $i |tr -d "{" | tr -d "}"`

   read  -p "$i_split ="  i_split_vars

   echo "$i_split=$i_split_vars" >>.env.sh

  done
}

function install(){
PATH=$PATH:/usr/local/go/bin
# 验证安装后的 Go 版本
echo "当前 Go 版本："
go version
mkdir fuel && cd fuel
curl https://install.fuel.network | sh
echo 'export PATH="$HOME/.fuelup/bin:$PATH"' >>.bashrc
. $HOME/.bashrc
export PATH="$HOME/.fuelup/bin:$PATH" && fuel-core -V
if [ $? -eq 0 ]
then
git clone https://github.com/FuelLabs/chain-configuration.git
echo $rpckey $name
rpc="https://sepolia.infura.io/v3/$rpckey"
echo $rpc
fuel-core-keygen new --key-type peering 2>&1 |tee $HOME/fule/key
keypair=$(cat key |awk -F':' '{print $3}' |awk -F'"' '{print $2}')
cat >$HOME/fuel/fuel.sh<<EOF
fuel-core run \
--service-name="$name" \
--keypair $keypair \
--relayer $rpc \
--ip=0.0.0.0 --port=4000 --peering-port=30333 \
--db-path=~/.fuel-sepolia-testnet \
--snapshot $HOME/chain-configuration/ignition/ \
--utxo-validation --poa-instant false --enable-p2p \
--reserved-nodes /dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmDxoChB7AheKNvCVpD4PHJwuDGn8rifMBEHmEynGHvHrf \
--sync-header-batch-size 100 \
--enable-relayer \
--relayer-v2-listening-contracts=0x01855B78C1f8868DE70e84507ec735983bf262dA \
--relayer-da-deploy-height=5827607 \
--relayer-log-page-size=500 \
--sync-block-stream-buffer-size 30
EOF
pm2 start $HOME/fule/fuel.sh --name fuel-core && pm2 save
else
	echo "install error"
fi
}


function fuel_log(){
    pm2 logs fuel-core
}

function fuel_version(){
    $HOME/.fuelup/bin/fuel-core -V
}

function restart(){
    pm2 restart fuel-core
}

function fuel_key(){
cat $HOME/fuel/key
}

function clean(){
pm2 stop fuel-core && pm2 delete fuel-core && pm2 save
sudo rm -rf .fuel*
sudo rm -rf fule
}

function About() {
echo '   _____    ___     ______   ______   ___
  / ___/   /   |   /_  __/  / ____/  /   |
  \__ \   / /| |    / /    / __/    / /| |
 ___/ /  / ___ |   / /    / /___   / ___ |
/____/  /_/  |_|  /_/    /_____/  /_/  |_|'

echo
echo -e "\xF0\x9F\x9A\x80 Satea Node Installer
Website: https://www.satea.io/
Twitter: https://x.com/SateaLabs
Discord: https://discord.com/invite/satea
Gitbook: https://satea.gitbook.io/satea
Version: $Version
Introduction: Satea is a DePINFI aggregator dedicated to breaking down the traditional barriers that limits access to computing resources.  "
echo""
}





case $1 in

install)

  if [ "$2" = "--auto" ]
  then
     echo "-> Automatic mode, please ensure that ALL SATEA_VARS(`VadVars`) have been replaced !"
          sleep 3

     #这里使用自动模式下的 安装 函数
     install

    else
      echo "Unrecognized variable(`VadVars`) being replaced, manual mode"

      #手动模式 使用Manual 获取用户输入的变量

      Manual      #获取用户输入的变量
      . .env.sh   #导入变量

      #其他安装函数
      install
    fi
  ;;
init)
init
  ;;
install)
install
  ;;
vars)
VadVars
  ;;
clean)
clean
  ;;
restart)
restart
  ;;
fuel_key)
fuel_key
 ;;
fuel_log)
fuel_log
;;
fuel_version)
fuel_version
;;

**)

 #定义帮助信息 例子
 About
  echo "Flag:
  install         Install fuel with manual mode,  If carrying the --auto parameter, start Automatic mode
  init            Install Dependent packages
  restart         restart the service         
  fuel_key        show your key
  fuel_version    show your version
  fuel_log        show your logs
  clean           Remove the fuel from your server"
  ;;
esac
